{
  "name": "leaderkey",
  "publisher": "JimmyZJX",
  "displayName": "Leader Key",
  "description": "Leader key with a which-key like menu",
  "version": "1.5.5",
  "homepage": "https://github.com/JimmyZJX/leaderkey",
  "repository": {
    "type": "git",
    "url": "https://github.com/JimmyZJX/leaderkey"
  },
  "bugs": {
    "url": "https://github.com/JimmyZJX/leaderkey/issues"
  },
  "icon": "img/logo.png",
  "engines": {
    "vscode": "^1.89.0"
  },
  "extensionKind": [
    "ui"
  ],
  "categories": [
    "Keymaps"
  ],
  "keywords": [
    "spacemacs",
    "emacs",
    "vscode",
    "vim",
    "VSCodeVim",
    "ripgrep",
    "rg",
    "find-file",
    "findfile",
    "dired"
  ],
  "extensionPack": [
    "jimmyzjx.remote-commons",
    "kahole.magit"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "dist/extension.js",
  "browser": "dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "leaderkey.extensions.getAll",
        "title": "Get Installed (ui) Extensions (id and version)",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.render",
        "title": "Render leaderkey menu",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.onkey",
        "title": "Append keys to the leaderkey state",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.refreshConfigs",
        "title": "Manually refresh configs under `leaderkey.overrides`. This command should only be called from other extensions.",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.migrateFromVSpaceCode",
        "title": "Try migrating the config from VSpaceCode to leaderkey",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.pushGotoStack",
        "title": "push the current cursor position to the \"go-to\" stack; used in a lot of built-in commands like [, g g]",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.popGotoStack",
        "title": "pop and set the cursor position from the \"go-to\" stack; bound to [, g b]",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.searchBindings",
        "title": "Search keybindings",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.findFile",
        "title": "Show find-file panel",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.ripgrep",
        "title": "Show ripgrep panel",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.dired",
        "title": "Show dired buffer",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.compare-from",
        "title": "Compare From Current Selection",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.compare-to",
        "title": "Compare To Current Selection",
        "category": "Leaderkey"
      },
      {
        "command": "leaderkey.compare-from-clipboard",
        "title": "Compare From Clipboard To Current Selection",
        "category": "Leaderkey"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "leaderkey.refreshConfigs",
          "when": "false"
        },
        {
          "command": "leaderkey.extensions.getAll",
          "when": "false"
        },
        {
          "command": "leaderkey.render",
          "when": "false"
        },
        {
          "command": "leaderkey.onkey",
          "when": "false"
        },
        {
          "command": "leaderkey.pushGotoStack",
          "when": "false"
        },
        {
          "command": "leaderkey.popGotoStack",
          "when": "false"
        }
      ]
    },
    "configuration": {
      "title": "leaderkey",
      "properties": {
        "leaderkey.arrowIsTwoCharWide": {
          "type": "boolean",
          "default": false,
          "description": "Fixes appearence issue for fonts that renders \"â†’\" as 2-char wide"
        },
        "leaderkey.overrides.user": {
          "type": "object",
          "default": {},
          "description": "leaderkey user configuration dictionary.\nThe key of the dict is a leaderkey path (e.g. `SPC a f`).\nThe value is usually a command ({command: \"some-command\"}) but could also be a string (as the name of the binding group)"
        },
        "leaderkey.ripgrep.exe": {
          "type": "string",
          "default": "rg",
          "description": "path to the ripgrep executable"
        },
        "leaderkey.fzf.exe": {
          "type": "string",
          "default": "fzf",
          "description": "path to the fzf executable (recommend 0.62.0 or above)"
        },
        "leaderkey.find-file.RETisTAB": {
          "type": "boolean",
          "default": false,
          "description": "Turn `RET` into `TAB` in find-file. Use `C-l` to revert to the `RET` behavior e.g. when selecting directory."
        }
      }
    },
    "keybindings": [
      {
        "key": "a",
        "when": "leaderkeyState && !config.leaderkey.disabled.a",
        "command": "leaderkey.onkey",
        "args": "a"
      },
      {
        "key": "alt+a",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-a",
        "command": "leaderkey.onkey",
        "args": "M-a"
      },
      {
        "key": "ctrl+a",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-a",
        "command": "leaderkey.onkey",
        "args": "C-a"
      },
      {
        "key": "shift+a",
        "when": "leaderkeyState && !config.leaderkey.disabled.A",
        "command": "leaderkey.onkey",
        "args": "A"
      },
      {
        "key": "b",
        "when": "leaderkeyState && !config.leaderkey.disabled.b",
        "command": "leaderkey.onkey",
        "args": "b"
      },
      {
        "key": "alt+b",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-b",
        "command": "leaderkey.onkey",
        "args": "M-b"
      },
      {
        "key": "ctrl+b",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-b",
        "command": "leaderkey.onkey",
        "args": "C-b"
      },
      {
        "key": "shift+b",
        "when": "leaderkeyState && !config.leaderkey.disabled.B",
        "command": "leaderkey.onkey",
        "args": "B"
      },
      {
        "key": "c",
        "when": "leaderkeyState && !config.leaderkey.disabled.c",
        "command": "leaderkey.onkey",
        "args": "c"
      },
      {
        "key": "alt+c",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-c",
        "command": "leaderkey.onkey",
        "args": "M-c"
      },
      {
        "key": "ctrl+c",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-c",
        "command": "leaderkey.onkey",
        "args": "C-c"
      },
      {
        "key": "shift+c",
        "when": "leaderkeyState && !config.leaderkey.disabled.C",
        "command": "leaderkey.onkey",
        "args": "C"
      },
      {
        "key": "d",
        "when": "leaderkeyState && !config.leaderkey.disabled.d",
        "command": "leaderkey.onkey",
        "args": "d"
      },
      {
        "key": "alt+d",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-d",
        "command": "leaderkey.onkey",
        "args": "M-d"
      },
      {
        "key": "ctrl+d",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-d",
        "command": "leaderkey.onkey",
        "args": "C-d"
      },
      {
        "key": "shift+d",
        "when": "leaderkeyState && !config.leaderkey.disabled.D",
        "command": "leaderkey.onkey",
        "args": "D"
      },
      {
        "key": "e",
        "when": "leaderkeyState && !config.leaderkey.disabled.e",
        "command": "leaderkey.onkey",
        "args": "e"
      },
      {
        "key": "alt+e",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-e",
        "command": "leaderkey.onkey",
        "args": "M-e"
      },
      {
        "key": "ctrl+e",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-e",
        "command": "leaderkey.onkey",
        "args": "C-e"
      },
      {
        "key": "shift+e",
        "when": "leaderkeyState && !config.leaderkey.disabled.E",
        "command": "leaderkey.onkey",
        "args": "E"
      },
      {
        "key": "f",
        "when": "leaderkeyState && !config.leaderkey.disabled.f",
        "command": "leaderkey.onkey",
        "args": "f"
      },
      {
        "key": "alt+f",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-f",
        "command": "leaderkey.onkey",
        "args": "M-f"
      },
      {
        "key": "ctrl+f",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-f",
        "command": "leaderkey.onkey",
        "args": "C-f"
      },
      {
        "key": "shift+f",
        "when": "leaderkeyState && !config.leaderkey.disabled.F",
        "command": "leaderkey.onkey",
        "args": "F"
      },
      {
        "key": "g",
        "when": "leaderkeyState && !config.leaderkey.disabled.g",
        "command": "leaderkey.onkey",
        "args": "g"
      },
      {
        "key": "alt+g",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-g",
        "command": "leaderkey.onkey",
        "args": "M-g"
      },
      {
        "key": "ctrl+g",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-g",
        "command": "leaderkey.onkey",
        "args": "C-g"
      },
      {
        "key": "shift+g",
        "when": "leaderkeyState && !config.leaderkey.disabled.G",
        "command": "leaderkey.onkey",
        "args": "G"
      },
      {
        "key": "h",
        "when": "leaderkeyState && !config.leaderkey.disabled.h",
        "command": "leaderkey.onkey",
        "args": "h"
      },
      {
        "key": "alt+h",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-h",
        "command": "leaderkey.onkey",
        "args": "M-h"
      },
      {
        "key": "ctrl+h",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-h",
        "command": "leaderkey.onkey",
        "args": "C-h"
      },
      {
        "key": "shift+h",
        "when": "leaderkeyState && !config.leaderkey.disabled.H",
        "command": "leaderkey.onkey",
        "args": "H"
      },
      {
        "key": "i",
        "when": "leaderkeyState && !config.leaderkey.disabled.i",
        "command": "leaderkey.onkey",
        "args": "i"
      },
      {
        "key": "alt+i",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-i",
        "command": "leaderkey.onkey",
        "args": "M-i"
      },
      {
        "key": "ctrl+i",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-i",
        "command": "leaderkey.onkey",
        "args": "C-i"
      },
      {
        "key": "shift+i",
        "when": "leaderkeyState && !config.leaderkey.disabled.I",
        "command": "leaderkey.onkey",
        "args": "I"
      },
      {
        "key": "j",
        "when": "leaderkeyState && !config.leaderkey.disabled.j",
        "command": "leaderkey.onkey",
        "args": "j"
      },
      {
        "key": "alt+j",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-j",
        "command": "leaderkey.onkey",
        "args": "M-j"
      },
      {
        "key": "ctrl+j",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-j",
        "command": "leaderkey.onkey",
        "args": "C-j"
      },
      {
        "key": "shift+j",
        "when": "leaderkeyState && !config.leaderkey.disabled.J",
        "command": "leaderkey.onkey",
        "args": "J"
      },
      {
        "key": "k",
        "when": "leaderkeyState && !config.leaderkey.disabled.k",
        "command": "leaderkey.onkey",
        "args": "k"
      },
      {
        "key": "alt+k",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-k",
        "command": "leaderkey.onkey",
        "args": "M-k"
      },
      {
        "key": "ctrl+k",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-k",
        "command": "leaderkey.onkey",
        "args": "C-k"
      },
      {
        "key": "shift+k",
        "when": "leaderkeyState && !config.leaderkey.disabled.K",
        "command": "leaderkey.onkey",
        "args": "K"
      },
      {
        "key": "l",
        "when": "leaderkeyState && !config.leaderkey.disabled.l",
        "command": "leaderkey.onkey",
        "args": "l"
      },
      {
        "key": "alt+l",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-l",
        "command": "leaderkey.onkey",
        "args": "M-l"
      },
      {
        "key": "ctrl+l",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-l",
        "command": "leaderkey.onkey",
        "args": "C-l"
      },
      {
        "key": "shift+l",
        "when": "leaderkeyState && !config.leaderkey.disabled.L",
        "command": "leaderkey.onkey",
        "args": "L"
      },
      {
        "key": "m",
        "when": "leaderkeyState && !config.leaderkey.disabled.m",
        "command": "leaderkey.onkey",
        "args": "m"
      },
      {
        "key": "alt+m",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-m",
        "command": "leaderkey.onkey",
        "args": "M-m"
      },
      {
        "key": "ctrl+m",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-m",
        "command": "leaderkey.onkey",
        "args": "C-m"
      },
      {
        "key": "shift+m",
        "when": "leaderkeyState && !config.leaderkey.disabled.M",
        "command": "leaderkey.onkey",
        "args": "M"
      },
      {
        "key": "n",
        "when": "leaderkeyState && !config.leaderkey.disabled.n",
        "command": "leaderkey.onkey",
        "args": "n"
      },
      {
        "key": "alt+n",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-n",
        "command": "leaderkey.onkey",
        "args": "M-n"
      },
      {
        "key": "ctrl+n",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-n",
        "command": "leaderkey.onkey",
        "args": "C-n"
      },
      {
        "key": "shift+n",
        "when": "leaderkeyState && !config.leaderkey.disabled.N",
        "command": "leaderkey.onkey",
        "args": "N"
      },
      {
        "key": "o",
        "when": "leaderkeyState && !config.leaderkey.disabled.o",
        "command": "leaderkey.onkey",
        "args": "o"
      },
      {
        "key": "alt+o",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-o",
        "command": "leaderkey.onkey",
        "args": "M-o"
      },
      {
        "key": "ctrl+o",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-o",
        "command": "leaderkey.onkey",
        "args": "C-o"
      },
      {
        "key": "shift+o",
        "when": "leaderkeyState && !config.leaderkey.disabled.O",
        "command": "leaderkey.onkey",
        "args": "O"
      },
      {
        "key": "p",
        "when": "leaderkeyState && !config.leaderkey.disabled.p",
        "command": "leaderkey.onkey",
        "args": "p"
      },
      {
        "key": "alt+p",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-p",
        "command": "leaderkey.onkey",
        "args": "M-p"
      },
      {
        "key": "ctrl+p",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-p",
        "command": "leaderkey.onkey",
        "args": "C-p"
      },
      {
        "key": "shift+p",
        "when": "leaderkeyState && !config.leaderkey.disabled.P",
        "command": "leaderkey.onkey",
        "args": "P"
      },
      {
        "key": "q",
        "when": "leaderkeyState && !config.leaderkey.disabled.q",
        "command": "leaderkey.onkey",
        "args": "q"
      },
      {
        "key": "alt+q",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-q",
        "command": "leaderkey.onkey",
        "args": "M-q"
      },
      {
        "key": "ctrl+q",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-q",
        "command": "leaderkey.onkey",
        "args": "C-q"
      },
      {
        "key": "shift+q",
        "when": "leaderkeyState && !config.leaderkey.disabled.Q",
        "command": "leaderkey.onkey",
        "args": "Q"
      },
      {
        "key": "r",
        "when": "leaderkeyState && !config.leaderkey.disabled.r",
        "command": "leaderkey.onkey",
        "args": "r"
      },
      {
        "key": "alt+r",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-r",
        "command": "leaderkey.onkey",
        "args": "M-r"
      },
      {
        "key": "ctrl+r",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-r",
        "command": "leaderkey.onkey",
        "args": "C-r"
      },
      {
        "key": "shift+r",
        "when": "leaderkeyState && !config.leaderkey.disabled.R",
        "command": "leaderkey.onkey",
        "args": "R"
      },
      {
        "key": "s",
        "when": "leaderkeyState && !config.leaderkey.disabled.s",
        "command": "leaderkey.onkey",
        "args": "s"
      },
      {
        "key": "alt+s",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-s",
        "command": "leaderkey.onkey",
        "args": "M-s"
      },
      {
        "key": "ctrl+s",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-s",
        "command": "leaderkey.onkey",
        "args": "C-s"
      },
      {
        "key": "shift+s",
        "when": "leaderkeyState && !config.leaderkey.disabled.S",
        "command": "leaderkey.onkey",
        "args": "S"
      },
      {
        "key": "t",
        "when": "leaderkeyState && !config.leaderkey.disabled.t",
        "command": "leaderkey.onkey",
        "args": "t"
      },
      {
        "key": "alt+t",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-t",
        "command": "leaderkey.onkey",
        "args": "M-t"
      },
      {
        "key": "ctrl+t",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-t",
        "command": "leaderkey.onkey",
        "args": "C-t"
      },
      {
        "key": "shift+t",
        "when": "leaderkeyState && !config.leaderkey.disabled.T",
        "command": "leaderkey.onkey",
        "args": "T"
      },
      {
        "key": "u",
        "when": "leaderkeyState && !config.leaderkey.disabled.u",
        "command": "leaderkey.onkey",
        "args": "u"
      },
      {
        "key": "alt+u",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-u",
        "command": "leaderkey.onkey",
        "args": "M-u"
      },
      {
        "key": "ctrl+u",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-u",
        "command": "leaderkey.onkey",
        "args": "C-u"
      },
      {
        "key": "shift+u",
        "when": "leaderkeyState && !config.leaderkey.disabled.U",
        "command": "leaderkey.onkey",
        "args": "U"
      },
      {
        "key": "v",
        "when": "leaderkeyState && !config.leaderkey.disabled.v",
        "command": "leaderkey.onkey",
        "args": "v"
      },
      {
        "key": "alt+v",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-v",
        "command": "leaderkey.onkey",
        "args": "M-v"
      },
      {
        "key": "ctrl+v",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-v",
        "command": "leaderkey.onkey",
        "args": "C-v"
      },
      {
        "key": "shift+v",
        "when": "leaderkeyState && !config.leaderkey.disabled.V",
        "command": "leaderkey.onkey",
        "args": "V"
      },
      {
        "key": "w",
        "when": "leaderkeyState && !config.leaderkey.disabled.w",
        "command": "leaderkey.onkey",
        "args": "w"
      },
      {
        "key": "alt+w",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-w",
        "command": "leaderkey.onkey",
        "args": "M-w"
      },
      {
        "key": "ctrl+w",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-w",
        "command": "leaderkey.onkey",
        "args": "C-w"
      },
      {
        "key": "shift+w",
        "when": "leaderkeyState && !config.leaderkey.disabled.W",
        "command": "leaderkey.onkey",
        "args": "W"
      },
      {
        "key": "x",
        "when": "leaderkeyState && !config.leaderkey.disabled.x",
        "command": "leaderkey.onkey",
        "args": "x"
      },
      {
        "key": "alt+x",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-x",
        "command": "leaderkey.onkey",
        "args": "M-x"
      },
      {
        "key": "ctrl+x",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-x",
        "command": "leaderkey.onkey",
        "args": "C-x"
      },
      {
        "key": "shift+x",
        "when": "leaderkeyState && !config.leaderkey.disabled.X",
        "command": "leaderkey.onkey",
        "args": "X"
      },
      {
        "key": "y",
        "when": "leaderkeyState && !config.leaderkey.disabled.y",
        "command": "leaderkey.onkey",
        "args": "y"
      },
      {
        "key": "alt+y",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-y",
        "command": "leaderkey.onkey",
        "args": "M-y"
      },
      {
        "key": "ctrl+y",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-y",
        "command": "leaderkey.onkey",
        "args": "C-y"
      },
      {
        "key": "shift+y",
        "when": "leaderkeyState && !config.leaderkey.disabled.Y",
        "command": "leaderkey.onkey",
        "args": "Y"
      },
      {
        "key": "z",
        "when": "leaderkeyState && !config.leaderkey.disabled.z",
        "command": "leaderkey.onkey",
        "args": "z"
      },
      {
        "key": "alt+z",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-z",
        "command": "leaderkey.onkey",
        "args": "M-z"
      },
      {
        "key": "ctrl+z",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-z",
        "command": "leaderkey.onkey",
        "args": "C-z"
      },
      {
        "key": "shift+z",
        "when": "leaderkeyState && !config.leaderkey.disabled.Z",
        "command": "leaderkey.onkey",
        "args": "Z"
      },
      {
        "key": "`",
        "when": "leaderkeyState && !config.leaderkey.disabled.backtick",
        "command": "leaderkey.onkey",
        "args": "`"
      },
      {
        "key": "alt+`",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-backtick",
        "command": "leaderkey.onkey",
        "args": "M-`"
      },
      {
        "key": "ctrl+`",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-backtick",
        "command": "leaderkey.onkey",
        "args": "C-`"
      },
      {
        "key": "shift+`",
        "when": "leaderkeyState && !config.leaderkey.disabled.tilde",
        "command": "leaderkey.onkey",
        "args": "~"
      },
      {
        "key": "1",
        "when": "leaderkeyState && !config.leaderkey.disabled.1",
        "command": "leaderkey.onkey",
        "args": "1"
      },
      {
        "key": "alt+1",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-1",
        "command": "leaderkey.onkey",
        "args": "M-1"
      },
      {
        "key": "ctrl+1",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-1",
        "command": "leaderkey.onkey",
        "args": "C-1"
      },
      {
        "key": "shift+1",
        "when": "leaderkeyState && !config.leaderkey.disabled.exclamation",
        "command": "leaderkey.onkey",
        "args": "!"
      },
      {
        "key": "2",
        "when": "leaderkeyState && !config.leaderkey.disabled.2",
        "command": "leaderkey.onkey",
        "args": "2"
      },
      {
        "key": "alt+2",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-2",
        "command": "leaderkey.onkey",
        "args": "M-2"
      },
      {
        "key": "ctrl+2",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-2",
        "command": "leaderkey.onkey",
        "args": "C-2"
      },
      {
        "key": "shift+2",
        "when": "leaderkeyState && !config.leaderkey.disabled.at",
        "command": "leaderkey.onkey",
        "args": "@"
      },
      {
        "key": "3",
        "when": "leaderkeyState && !config.leaderkey.disabled.3",
        "command": "leaderkey.onkey",
        "args": "3"
      },
      {
        "key": "alt+3",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-3",
        "command": "leaderkey.onkey",
        "args": "M-3"
      },
      {
        "key": "ctrl+3",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-3",
        "command": "leaderkey.onkey",
        "args": "C-3"
      },
      {
        "key": "shift+3",
        "when": "leaderkeyState && !config.leaderkey.disabled.hash",
        "command": "leaderkey.onkey",
        "args": "#"
      },
      {
        "key": "4",
        "when": "leaderkeyState && !config.leaderkey.disabled.4",
        "command": "leaderkey.onkey",
        "args": "4"
      },
      {
        "key": "alt+4",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-4",
        "command": "leaderkey.onkey",
        "args": "M-4"
      },
      {
        "key": "ctrl+4",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-4",
        "command": "leaderkey.onkey",
        "args": "C-4"
      },
      {
        "key": "shift+4",
        "when": "leaderkeyState && !config.leaderkey.disabled.dollar",
        "command": "leaderkey.onkey",
        "args": "$"
      },
      {
        "key": "5",
        "when": "leaderkeyState && !config.leaderkey.disabled.5",
        "command": "leaderkey.onkey",
        "args": "5"
      },
      {
        "key": "alt+5",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-5",
        "command": "leaderkey.onkey",
        "args": "M-5"
      },
      {
        "key": "ctrl+5",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-5",
        "command": "leaderkey.onkey",
        "args": "C-5"
      },
      {
        "key": "shift+5",
        "when": "leaderkeyState && !config.leaderkey.disabled.percent",
        "command": "leaderkey.onkey",
        "args": "%"
      },
      {
        "key": "6",
        "when": "leaderkeyState && !config.leaderkey.disabled.6",
        "command": "leaderkey.onkey",
        "args": "6"
      },
      {
        "key": "alt+6",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-6",
        "command": "leaderkey.onkey",
        "args": "M-6"
      },
      {
        "key": "ctrl+6",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-6",
        "command": "leaderkey.onkey",
        "args": "C-6"
      },
      {
        "key": "shift+6",
        "when": "leaderkeyState && !config.leaderkey.disabled.caret",
        "command": "leaderkey.onkey",
        "args": "^"
      },
      {
        "key": "7",
        "when": "leaderkeyState && !config.leaderkey.disabled.7",
        "command": "leaderkey.onkey",
        "args": "7"
      },
      {
        "key": "alt+7",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-7",
        "command": "leaderkey.onkey",
        "args": "M-7"
      },
      {
        "key": "ctrl+7",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-7",
        "command": "leaderkey.onkey",
        "args": "C-7"
      },
      {
        "key": "shift+7",
        "when": "leaderkeyState && !config.leaderkey.disabled.ampersand",
        "command": "leaderkey.onkey",
        "args": "&"
      },
      {
        "key": "8",
        "when": "leaderkeyState && !config.leaderkey.disabled.8",
        "command": "leaderkey.onkey",
        "args": "8"
      },
      {
        "key": "alt+8",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-8",
        "command": "leaderkey.onkey",
        "args": "M-8"
      },
      {
        "key": "ctrl+8",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-8",
        "command": "leaderkey.onkey",
        "args": "C-8"
      },
      {
        "key": "shift+8",
        "when": "leaderkeyState && !config.leaderkey.disabled.asterisk",
        "command": "leaderkey.onkey",
        "args": "*"
      },
      {
        "key": "9",
        "when": "leaderkeyState && !config.leaderkey.disabled.9",
        "command": "leaderkey.onkey",
        "args": "9"
      },
      {
        "key": "alt+9",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-9",
        "command": "leaderkey.onkey",
        "args": "M-9"
      },
      {
        "key": "ctrl+9",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-9",
        "command": "leaderkey.onkey",
        "args": "C-9"
      },
      {
        "key": "shift+9",
        "when": "leaderkeyState && !config.leaderkey.disabled.openingparenthesis",
        "command": "leaderkey.onkey",
        "args": "("
      },
      {
        "key": "0",
        "when": "leaderkeyState && !config.leaderkey.disabled.0",
        "command": "leaderkey.onkey",
        "args": "0"
      },
      {
        "key": "alt+0",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-0",
        "command": "leaderkey.onkey",
        "args": "M-0"
      },
      {
        "key": "ctrl+0",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-0",
        "command": "leaderkey.onkey",
        "args": "C-0"
      },
      {
        "key": "shift+0",
        "when": "leaderkeyState && !config.leaderkey.disabled.closingparenthesis",
        "command": "leaderkey.onkey",
        "args": ")"
      },
      {
        "key": "-",
        "when": "leaderkeyState && !config.leaderkey.disabled.dash",
        "command": "leaderkey.onkey",
        "args": "-"
      },
      {
        "key": "alt+-",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-dash",
        "command": "leaderkey.onkey",
        "args": "M--"
      },
      {
        "key": "ctrl+-",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-dash",
        "command": "leaderkey.onkey",
        "args": "C--"
      },
      {
        "key": "shift+-",
        "when": "leaderkeyState && !config.leaderkey.disabled.underscore",
        "command": "leaderkey.onkey",
        "args": "_"
      },
      {
        "key": "=",
        "when": "leaderkeyState && !config.leaderkey.disabled.equal",
        "command": "leaderkey.onkey",
        "args": "="
      },
      {
        "key": "alt+=",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-equal",
        "command": "leaderkey.onkey",
        "args": "M-="
      },
      {
        "key": "ctrl+=",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-equal",
        "command": "leaderkey.onkey",
        "args": "C-="
      },
      {
        "key": "shift+=",
        "when": "leaderkeyState && !config.leaderkey.disabled.plus",
        "command": "leaderkey.onkey",
        "args": "+"
      },
      {
        "key": ",",
        "when": "leaderkeyState && !config.leaderkey.disabled.comma",
        "command": "leaderkey.onkey",
        "args": ","
      },
      {
        "key": "alt+,",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-comma",
        "command": "leaderkey.onkey",
        "args": "M-,"
      },
      {
        "key": "ctrl+,",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-comma",
        "command": "leaderkey.onkey",
        "args": "C-,"
      },
      {
        "key": "shift+,",
        "when": "leaderkeyState && !config.leaderkey.disabled.less",
        "command": "leaderkey.onkey",
        "args": "<"
      },
      {
        "key": ".",
        "when": "leaderkeyState && !config.leaderkey.disabled.dot",
        "command": "leaderkey.onkey",
        "args": "."
      },
      {
        "key": "alt+.",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-dot",
        "command": "leaderkey.onkey",
        "args": "M-."
      },
      {
        "key": "ctrl+.",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-dot",
        "command": "leaderkey.onkey",
        "args": "C-."
      },
      {
        "key": "shift+.",
        "when": "leaderkeyState && !config.leaderkey.disabled.greater",
        "command": "leaderkey.onkey",
        "args": ">"
      },
      {
        "key": "/",
        "when": "leaderkeyState && !config.leaderkey.disabled.slash",
        "command": "leaderkey.onkey",
        "args": "/"
      },
      {
        "key": "alt+/",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-slash",
        "command": "leaderkey.onkey",
        "args": "M-/"
      },
      {
        "key": "ctrl+/",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-slash",
        "command": "leaderkey.onkey",
        "args": "C-/"
      },
      {
        "key": "shift+/",
        "when": "leaderkeyState && !config.leaderkey.disabled.question",
        "command": "leaderkey.onkey",
        "args": "?"
      },
      {
        "key": "[",
        "when": "leaderkeyState && !config.leaderkey.disabled.openingbracket",
        "command": "leaderkey.onkey",
        "args": "["
      },
      {
        "key": "alt+[",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-openingbracket",
        "command": "leaderkey.onkey",
        "args": "M-["
      },
      {
        "key": "ctrl+[",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-openingbracket",
        "command": "leaderkey.onkey",
        "args": "C-["
      },
      {
        "key": "shift+[",
        "when": "leaderkeyState && !config.leaderkey.disabled.openingbrace",
        "command": "leaderkey.onkey",
        "args": "{"
      },
      {
        "key": "]",
        "when": "leaderkeyState && !config.leaderkey.disabled.closingbracket",
        "command": "leaderkey.onkey",
        "args": "]"
      },
      {
        "key": "alt+]",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-closingbracket",
        "command": "leaderkey.onkey",
        "args": "M-]"
      },
      {
        "key": "ctrl+]",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-closingbracket",
        "command": "leaderkey.onkey",
        "args": "C-]"
      },
      {
        "key": "shift+]",
        "when": "leaderkeyState && !config.leaderkey.disabled.closingbrace",
        "command": "leaderkey.onkey",
        "args": "}"
      },
      {
        "key": ";",
        "when": "leaderkeyState && !config.leaderkey.disabled.semicolon",
        "command": "leaderkey.onkey",
        "args": ";"
      },
      {
        "key": "alt+;",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-semicolon",
        "command": "leaderkey.onkey",
        "args": "M-;"
      },
      {
        "key": "ctrl+;",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-semicolon",
        "command": "leaderkey.onkey",
        "args": "C-;"
      },
      {
        "key": "shift+;",
        "when": "leaderkeyState && !config.leaderkey.disabled.colon",
        "command": "leaderkey.onkey",
        "args": ":"
      },
      {
        "key": "'",
        "when": "leaderkeyState && !config.leaderkey.disabled.singlequote",
        "command": "leaderkey.onkey",
        "args": "'"
      },
      {
        "key": "alt+'",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-singlequote",
        "command": "leaderkey.onkey",
        "args": "M-'"
      },
      {
        "key": "ctrl+'",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-singlequote",
        "command": "leaderkey.onkey",
        "args": "C-'"
      },
      {
        "key": "shift+'",
        "when": "leaderkeyState && !config.leaderkey.disabled.doublequote",
        "command": "leaderkey.onkey",
        "args": "\""
      },
      {
        "key": "\\",
        "when": "leaderkeyState && !config.leaderkey.disabled.forwardslash",
        "command": "leaderkey.onkey",
        "args": "\\"
      },
      {
        "key": "alt+\\",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-forwardslash",
        "command": "leaderkey.onkey",
        "args": "M-\\"
      },
      {
        "key": "ctrl+\\",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-forwardslash",
        "command": "leaderkey.onkey",
        "args": "C-\\"
      },
      {
        "key": "shift+\\",
        "when": "leaderkeyState && !config.leaderkey.disabled.bar",
        "command": "leaderkey.onkey",
        "args": "|"
      },
      {
        "key": "space",
        "when": "leaderkeyState && !config.leaderkey.disabled.SPC",
        "command": "leaderkey.onkey",
        "args": "SPC"
      },
      {
        "key": "alt+space",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-SPC",
        "command": "leaderkey.onkey",
        "args": "M-SPC"
      },
      {
        "key": "ctrl+space",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-SPC",
        "command": "leaderkey.onkey",
        "args": "C-SPC"
      },
      {
        "key": "shift+space",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-SPC",
        "command": "leaderkey.onkey",
        "args": "S-SPC"
      },
      {
        "key": "enter",
        "when": "leaderkeyState && !config.leaderkey.disabled.RET",
        "command": "leaderkey.onkey",
        "args": "RET"
      },
      {
        "key": "alt+enter",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-RET",
        "command": "leaderkey.onkey",
        "args": "M-RET"
      },
      {
        "key": "ctrl+enter",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-RET",
        "command": "leaderkey.onkey",
        "args": "C-RET"
      },
      {
        "key": "shift+enter",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-RET",
        "command": "leaderkey.onkey",
        "args": "S-RET"
      },
      {
        "key": "tab",
        "when": "leaderkeyState && !config.leaderkey.disabled.TAB",
        "command": "leaderkey.onkey",
        "args": "TAB"
      },
      {
        "key": "alt+tab",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-TAB",
        "command": "leaderkey.onkey",
        "args": "M-TAB"
      },
      {
        "key": "ctrl+tab",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-TAB",
        "command": "leaderkey.onkey",
        "args": "C-TAB"
      },
      {
        "key": "shift+tab",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-TAB",
        "command": "leaderkey.onkey",
        "args": "S-TAB"
      },
      {
        "key": "escape",
        "when": "leaderkeyState && !config.leaderkey.disabled.ESC",
        "command": "leaderkey.onkey",
        "args": "ESC"
      },
      {
        "key": "alt+escape",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-ESC",
        "command": "leaderkey.onkey",
        "args": "M-ESC"
      },
      {
        "key": "ctrl+escape",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-ESC",
        "command": "leaderkey.onkey",
        "args": "C-ESC"
      },
      {
        "key": "shift+escape",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-ESC",
        "command": "leaderkey.onkey",
        "args": "S-ESC"
      },
      {
        "key": "backspace",
        "when": "leaderkeyState && !config.leaderkey.disabled.backspace",
        "command": "leaderkey.onkey",
        "args": "<backspace>"
      },
      {
        "key": "alt+backspace",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-backspace",
        "command": "leaderkey.onkey",
        "args": "M-<backspace>"
      },
      {
        "key": "ctrl+backspace",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-backspace",
        "command": "leaderkey.onkey",
        "args": "C-<backspace>"
      },
      {
        "key": "shift+backspace",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-backspace",
        "command": "leaderkey.onkey",
        "args": "S-<backspace>"
      },
      {
        "key": "delete",
        "when": "leaderkeyState && !config.leaderkey.disabled.delete",
        "command": "leaderkey.onkey",
        "args": "<delete>"
      },
      {
        "key": "alt+delete",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-delete",
        "command": "leaderkey.onkey",
        "args": "M-<delete>"
      },
      {
        "key": "ctrl+delete",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-delete",
        "command": "leaderkey.onkey",
        "args": "C-<delete>"
      },
      {
        "key": "shift+delete",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-delete",
        "command": "leaderkey.onkey",
        "args": "S-<delete>"
      },
      {
        "key": "pageup",
        "when": "leaderkeyState && !config.leaderkey.disabled.pageup",
        "command": "leaderkey.onkey",
        "args": "<pageup>"
      },
      {
        "key": "alt+pageup",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-pageup",
        "command": "leaderkey.onkey",
        "args": "M-<pageup>"
      },
      {
        "key": "ctrl+pageup",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-pageup",
        "command": "leaderkey.onkey",
        "args": "C-<pageup>"
      },
      {
        "key": "shift+pageup",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-pageup",
        "command": "leaderkey.onkey",
        "args": "S-<pageup>"
      },
      {
        "key": "pagedown",
        "when": "leaderkeyState && !config.leaderkey.disabled.pagedown",
        "command": "leaderkey.onkey",
        "args": "<pagedown>"
      },
      {
        "key": "alt+pagedown",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-pagedown",
        "command": "leaderkey.onkey",
        "args": "M-<pagedown>"
      },
      {
        "key": "ctrl+pagedown",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-pagedown",
        "command": "leaderkey.onkey",
        "args": "C-<pagedown>"
      },
      {
        "key": "shift+pagedown",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-pagedown",
        "command": "leaderkey.onkey",
        "args": "S-<pagedown>"
      },
      {
        "key": "up",
        "when": "leaderkeyState && !config.leaderkey.disabled.up",
        "command": "leaderkey.onkey",
        "args": "<up>"
      },
      {
        "key": "alt+up",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-up",
        "command": "leaderkey.onkey",
        "args": "M-<up>"
      },
      {
        "key": "ctrl+up",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-up",
        "command": "leaderkey.onkey",
        "args": "C-<up>"
      },
      {
        "key": "shift+up",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-up",
        "command": "leaderkey.onkey",
        "args": "S-<up>"
      },
      {
        "key": "down",
        "when": "leaderkeyState && !config.leaderkey.disabled.down",
        "command": "leaderkey.onkey",
        "args": "<down>"
      },
      {
        "key": "alt+down",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-down",
        "command": "leaderkey.onkey",
        "args": "M-<down>"
      },
      {
        "key": "ctrl+down",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-down",
        "command": "leaderkey.onkey",
        "args": "C-<down>"
      },
      {
        "key": "shift+down",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-down",
        "command": "leaderkey.onkey",
        "args": "S-<down>"
      },
      {
        "key": "left",
        "when": "leaderkeyState && !config.leaderkey.disabled.left",
        "command": "leaderkey.onkey",
        "args": "<left>"
      },
      {
        "key": "alt+left",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-left",
        "command": "leaderkey.onkey",
        "args": "M-<left>"
      },
      {
        "key": "ctrl+left",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-left",
        "command": "leaderkey.onkey",
        "args": "C-<left>"
      },
      {
        "key": "shift+left",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-left",
        "command": "leaderkey.onkey",
        "args": "S-<left>"
      },
      {
        "key": "right",
        "when": "leaderkeyState && !config.leaderkey.disabled.right",
        "command": "leaderkey.onkey",
        "args": "<right>"
      },
      {
        "key": "alt+right",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-right",
        "command": "leaderkey.onkey",
        "args": "M-<right>"
      },
      {
        "key": "ctrl+right",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-right",
        "command": "leaderkey.onkey",
        "args": "C-<right>"
      },
      {
        "key": "shift+right",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-right",
        "command": "leaderkey.onkey",
        "args": "S-<right>"
      },
      {
        "key": "home",
        "when": "leaderkeyState && !config.leaderkey.disabled.home",
        "command": "leaderkey.onkey",
        "args": "<home>"
      },
      {
        "key": "alt+home",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-home",
        "command": "leaderkey.onkey",
        "args": "M-<home>"
      },
      {
        "key": "ctrl+home",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-home",
        "command": "leaderkey.onkey",
        "args": "C-<home>"
      },
      {
        "key": "shift+home",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-home",
        "command": "leaderkey.onkey",
        "args": "S-<home>"
      },
      {
        "key": "end",
        "when": "leaderkeyState && !config.leaderkey.disabled.end",
        "command": "leaderkey.onkey",
        "args": "<end>"
      },
      {
        "key": "alt+end",
        "when": "leaderkeyState && !config.leaderkey.disabled.M-end",
        "command": "leaderkey.onkey",
        "args": "M-<end>"
      },
      {
        "key": "ctrl+end",
        "when": "leaderkeyState && !config.leaderkey.disabled.C-end",
        "command": "leaderkey.onkey",
        "args": "C-<end>"
      },
      {
        "key": "shift+end",
        "when": "leaderkeyState && !config.leaderkey.disabled.S-end",
        "command": "leaderkey.onkey",
        "args": "S-<end>"
      },
      {
        "key": "f",
        "when": "leaderkeyState == 'SPC' && sideBarVisible && explorerViewletVisible",
        "command": "leaderkey.onkey",
        "args": {
          "key": "f",
          "when": "explorerVisible"
        }
      },
      {
        "key": "space",
        "command": "runCommands",
        "args": {
          "commands": [
            {
              "command": "_setContext",
              "args": [
                "leaderkeyState",
                "SPC"
              ]
            },
            {
              "command": "leaderkey.render",
              "args": "SPC"
            }
          ]
        },
        "when": "(((activeEditorGroupEmpty || activeEditor == 'workbench.editors.errorEditor') && focusedView == '') || sideBarFocus || notebookEditorFocused || inWelcome) && !leaderkeyState && !inputFocus"
      },
      {
        "key": ",",
        "command": "runCommands",
        "args": {
          "commands": [
            {
              "command": "_setContext",
              "args": [
                "leaderkeyState",
                ","
              ]
            },
            {
              "command": "leaderkey.render",
              "args": ","
            }
          ]
        },
        "when": "(((activeEditorGroupEmpty || activeEditor == 'workbench.editors.errorEditor') && focusedView == '') || sideBarFocus || notebookEditorFocused || inWelcome) && !leaderkeyState && !inputFocus"
      },
      {
        "key": "q",
        "when": "editorTextFocus && resourceScheme == 'leaderkey.dired' && !leaderkeyState && (!vim.active || vim.mode == 'Normal')",
        "command": "leaderkey.dired.quit"
      },
      {
        "key": "shift+6",
        "when": "editorTextFocus && resourceScheme == 'leaderkey.dired' && !leaderkeyState && (!vim.active || vim.mode == 'Normal')",
        "command": "leaderkey.dired.up"
      },
      {
        "key": "enter",
        "when": "editorTextFocus && resourceScheme == 'leaderkey.dired' && !leaderkeyState && (!vim.active || vim.mode == 'Normal')",
        "command": "leaderkey.dired.enter"
      },
      {
        "key": "alt+space",
        "command": "runCommands",
        "args": {
          "commands": [
            {
              "command": "_setContext",
              "args": [
                "leaderkeyState",
                "SPC"
              ]
            },
            {
              "command": "leaderkey.render",
              "args": "SPC"
            }
          ]
        },
        "when": "!leaderkeyState"
      },
      {
        "key": "alt+,",
        "command": "runCommands",
        "args": {
          "commands": [
            {
              "command": "_setContext",
              "args": [
                "leaderkeyState",
                ","
              ]
            },
            {
              "command": "leaderkey.render",
              "args": ","
            }
          ]
        },
        "when": "!leaderkeyState && !terminalFocus"
      }
    ],
    "languages": [
      {
        "id": "leaderkey-dired"
      },
      {
        "id": "leaderkey-ripgrep-panel"
      }
    ],
    "configurationDefaults": {
      "[leaderkey-dired]": {
        "editor.lineNumbers": "off",
        "editor.folding": false,
        "editor.glyphMargin": false,
        "editor.autoClosingBrackets": "never",
        "editor.autoSurround": "never",
        "editor.quickSuggestions": {
          "other": "off",
          "comments": "off",
          "strings": "off"
        },
        "editor.rulers": [],
        "editor.stickyScroll.enabled": true,
        "editor.stickyScroll.maxLineCount": 2,
        "editor.occurrencesHighlight": "off",
        "editor.selectionHighlight": false
      },
      "[leaderkey-ripgrep-panel]": {
        "editor.lineNumbers": "off",
        "editor.folding": false,
        "editor.glyphMargin": false,
        "editor.autoClosingBrackets": "never",
        "editor.autoSurround": "never",
        "editor.quickSuggestions": {
          "other": "off",
          "comments": "off",
          "strings": "off"
        },
        "editor.rulers": [],
        "editor.stickyScroll.enabled": true,
        "editor.stickyScroll.maxLineCount": 2,
        "editor.occurrencesHighlight": "off",
        "editor.selectionHighlight": false
      }
    }
  },
  "prettier": {
    "printWidth": 90
  },
  "eslintConfig": {
    "root": true,
    "ignorePatterns": [
      "src/fzf-for-js/**/*",
      "src/ansi-sequence-parser/**/*"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "rules": {
      "semi": [
        2,
        "always"
      ],
      "object-shorthand": [
        "error",
        "always"
      ],
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "args": "all",
          "argsIgnorePattern": "^_",
          "caughtErrors": "all",
          "caughtErrorsIgnorePattern": "^_",
          "destructuredArrayIgnorePattern": "^_",
          "varsIgnorePattern": "^_",
          "ignoreRestSiblings": true
        }
      ],
      "@typescript-eslint/no-explicit-any": 0,
      "@typescript-eslint/explicit-module-boundary-types": 0,
      "@typescript-eslint/no-non-null-assertion": 0,
      "@typescript-eslint/no-namespace": 0,
      "eqeqeq": [
        "error",
        "always"
      ]
    }
  },
  "jest": {
    "preset": "ts-jest",
    "transform": {
      "^.+\\.(ts|tsx)?$": "ts-jest"
    },
    "modulePathIgnorePatterns": [
      "./out/",
      "./src/fzf-for-js/",
      "./src/ansi-sequence-parser/"
    ]
  },
  "scripts": {
    "vscode:prepublish": "pnpm run compile-web",
    "watch": "webpack --mode development --watch",
    "compile-web": "pnpm run compile && webpack",
    "compile": "tsc -p ./",
    "pretest": "pnpm run compile && pnpm run lint",
    "lint": "eslint src",
    "test": "jest",
    "testw": "jest --watchAll",
    "prettier": "prettier",
    "prettier-check": "prettier \"src/**/*.ts\" --check --log-level warn",
    "vsce": "vsce package --no-dependencies --allow-star-activation --out dist/leaderkey.vsix"
  },
  "devDependencies": {
    "@types/jest": "^29.1.2",
    "@types/path-browserify": "^1.0.3",
    "@types/vscode": "^1.89.0 <1.90.0",
    "@typescript-eslint/eslint-plugin": "^8.3.0",
    "@typescript-eslint/parser": "^8.3.0",
    "@vscode/vsce": "^2.23.0",
    "eslint": "^8.26.0",
    "prettier": "^3.3.3",
    "ts-jest": "^29.1.2",
    "ts-loader": "^9.2.5",
    "typescript": "^5.3.2 <5.6.0",
    "webpack": "^5.52.1",
    "webpack-cli": "^4.8.0"
  },
  "dependencies": {
    "assert": "^2.1.0",
    "path-browserify": "^1.0.1",
    "process": "^0.11.10"
  }
}
